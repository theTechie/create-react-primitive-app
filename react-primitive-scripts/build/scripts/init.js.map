{"version":3,"sources":["init.js"],"names":["DEFAULT_DEPENDENCIES","expo","react","DEFAULT_DEV_DEPENDENCIES","module","exports","appPath","appName","verbose","cwd","ownPackageName","require","name","ownPath","join","useYarn","npmVersion","sync","stdout","toString","trim","match","console","log","yellow","process","exit","readmeExists","rename","appPackagePath","JSON","readFile","appPackage","parse","main","scripts","start","eject","android","ios","test","jest","preset","dependencies","devDependencies","writeFile","copy","code","data","appendFile","unlink","command","args","push","npmOrYarn","proc","stdio","on","error","cdpath","resolve","cyan"],"mappings":"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","file":"init.js","sourcesContent":["// @flow\n\nimport chalk from 'chalk';\nimport fse from 'fs-extra';\nimport path from 'path';\nimport pathExists from 'path-exists';\nimport spawn from 'cross-spawn';\nimport log from '../util/log';\n\n// UPDATE DEPENDENCY VERSIONS HERE\nconst DEFAULT_DEPENDENCIES = {\n    expo: '^20.0.0',\n    react: '16.0.0-alpha.12',\n    'react-native': '^0.47.0'\n};\n\n// TODO figure out how this interacts with ejection\nconst DEFAULT_DEV_DEPENDENCIES = {\n    'jest-expo': '~20.0.0',\n    'react-test-renderer': '16.0.0-alpha.12'\n};\n\nmodule.exports = async (\n    appPath: string,\n    appName: string,\n    verbose: boolean,\n    cwd: string = ''\n) => {\n    const ownPackageName: string = require('../../package.json').name;\n    const ownPath: string = path.join(appPath, 'node_modules', ownPackageName);\n    const useYarn: boolean = await pathExists(path.join(appPath, 'yarn.lock'));\n\n    // FIXME(perry) remove when npm 5 is supported\n    if (!useYarn) {\n        let npmVersion = spawn\n            .sync('npm', ['--version'])\n            .stdout.toString()\n            .trim();\n\n        if (npmVersion.match(/\\d+/)[0] === '5') {\n            console.log(\n                chalk.yellow(\n                    `\n*******************************************************************************\nERROR: npm 5 is not supported yet\n*******************************************************************************\n\nIt looks like you're using npm 5 which was recently released.\n\nCreate React Primitive App doesn't work with npm 5 yet, unfortunately. We\nrecommend using npm 4 or yarn until some bugs are resolved.\n\nYou can follow the known issues with npm 5 at:\nhttps://github.com/npm/npm/issues/16991\n\n*******************************************************************************\n `\n                )\n            );\n            process.exit(1);\n        }\n    }\n\n    const readmeExists: boolean = await pathExists(\n        path.join(appPath, 'README.md')\n    );\n    if (readmeExists) {\n        await fse.rename(\n            path.join(appPath, 'README.md'),\n            path.join(appPath, 'README.old.md')\n        );\n    }\n\n    const appPackagePath: string = path.join(appPath, 'package.json');\n    const appPackage = JSON.parse(await fse.readFile(appPackagePath));\n\n    // mutate the default package.json in any ways we need to\n    appPackage.main = './node_modules/react-primitive-scripts/build/bin/crna-entry.js';\n    appPackage.scripts = {\n        start: 'react-primitive-scripts start',\n        eject: 'react-primitive-scripts eject',\n        android: 'react-primitive-scripts android',\n        ios: 'react-primitive-scripts ios',\n        test: 'node node_modules/jest/bin/jest.js --watch'\n    };\n\n    appPackage.jest = {\n        preset: 'jest-expo'\n    };\n\n    if (!appPackage.dependencies) {\n        appPackage.dependencies = {};\n    }\n\n    if (!appPackage.devDependencies) {\n        appPackage.devDependencies = {};\n    }\n\n    // react-primitive-scripts is already in the package.json devDependencies\n    // so we need to merge instead of assigning\n    Object.assign(appPackage.dependencies, DEFAULT_DEPENDENCIES);\n    Object.assign(appPackage.devDependencies, DEFAULT_DEV_DEPENDENCIES);\n\n    // Write the new appPackage after copying so that we can include any existing\n    await fse.writeFile(appPackagePath, JSON.stringify(appPackage, null, 2));\n\n    // Copy the files for the user\n    await fse.copy(path.join(ownPath, 'template'), appPath);\n\n    // Rename gitignore after the fact to prevent npm from renaming it to .npmignore\n    try {\n        await fse.rename(\n            path.join(appPath, 'gitignore'),\n            path.join(appPath, '.gitignore')\n        );\n    } catch (err) {\n        // Append if there's already a `.gitignore` file there\n        if (err.code === 'EEXIST') {\n            const data = await fse.readFile(path.join(appPath, 'gitignore'));\n            await fse.appendFile(path.join(appPath, '.gitignore'), data);\n            await fse.unlink(path.join(appPath, 'gitignore'));\n        } else {\n            throw err;\n        }\n    }\n\n    // Run yarn or npm\n    let command = '';\n    let args = [];\n\n    if (useYarn) {\n        command = 'yarnpkg';\n    } else {\n        command = 'npm';\n        args = ['install', '--save'];\n\n        if (verbose) {\n            args.push('--verbose');\n        }\n    }\n\n    const npmOrYarn = useYarn ? 'yarn' : 'npm';\n    log(`Installing dependencies using ${npmOrYarn}...`);\n    log(); // why is this here\n\n    const proc = spawn(command, args, { stdio: 'inherit' });\n    proc.on('close', code => {\n        if (code !== 0) {\n            console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n            return;\n        }\n\n        // display the cleanest way to get to the app dir\n        // if the cwd + appName is equal to the full path, then just cd into appName\n        let cdpath;\n        if (path.resolve(cwd, appName) === appPath) {\n            cdpath = appName;\n        } else {\n            cdpath = appPath;\n        }\n\n        log(\n            `\n\nSuccess! Created ${appName} at ${appPath}\nInside that directory, you can run several commands:\n\n  ${chalk.cyan(npmOrYarn + ' start')}\n    Starts the development server so you can open your app in the Expo\n    app on your phone.\n\n  ${chalk.cyan(npmOrYarn + ' run ios')}\n    (Mac only, requires Xcode)\n    Starts the development server and loads your app in an iOS simulator.\n\n  ${chalk.cyan(npmOrYarn + ' run android')}\n    (Requires Android build tools)\n    Starts the development server and loads your app on a connected Android\n    device or emulator.\n\n  ${chalk.cyan(npmOrYarn + ' test')}\n    Starts the test runner.\n\n  ${chalk.cyan(npmOrYarn + ' run eject')}\n    Removes this tool and copies build dependencies, configuration files\n    and scripts into the app directory. If you do this, you can’t go back!\n\nWe suggest that you begin by typing:\n\n  ${chalk.cyan('cd ' + cdpath)}\n  ${chalk.cyan(npmOrYarn + ' start')}`\n        );\n\n        if (readmeExists) {\n            log(\n                `\n${chalk.yellow('You had a `README.md` file, we renamed it to `README.old.md`')}`\n            );\n        }\n\n        log();\n        log('Happy hacking!');\n    });\n};\n"]}