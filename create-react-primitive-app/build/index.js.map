{"version":3,"sources":["index.js"],"names":["name","verbose","version","root","resolve","appName","basename","packageToInstall","getInstallPackage","packageName","getPackageName","checkAppName","mkdir","isSafeToCreateProjectIn","console","log","process","exit","packageJson","private","writeFile","join","chdir","packageManagerCmd","packageManagerType","run","createApp","install","code","command","args","error","checkNodeVersion","scriptsPath","cwd","init","require","packageJsonPath","JSON","readFile","parse","engines","node","satisfies","red","validFiles","readdir","indexOf","file","every","argv","slice","commands","_","packageManager","length","then","userHasYarn","result","sync","stdio","status","e","defaultType","supportedTypes","t","find","type","callback","cmd","push","concat","validSemver","valid","installPackage","matches","match","Error","charAt","substr","split","allDependencies","cyan","map","depName"],"mappings":"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","file":"index.js","sourcesContent":["\n\n// @flow\n\n// DON'T MODIFY THIS FILE\n// IF AT ALL POSSIBLE, MAKE ANY CHANGES IN THE SCRIPTS PACKAGE\n\nimport fse from 'fs-extra';\nimport chalk from 'chalk';\nimport minimist from 'minimist';\nimport path from 'path';\nimport pathExists from 'path-exists';\nimport semver from 'semver';\nimport spawn from 'cross-spawn';\n\nconst argv = minimist(process.argv.slice(2));\n\n/**\n * Arguments:\n *   --version - to print current version\n *   --verbose - to print npm logs during init\n *   --scripts-version <alternative package>\n *   --package-manager <package manager name or path>\n *     Example of valid values:\n *     - a specific npm version: \"0.22.0-rc1\"\n *     - a .tgz archive from npm: \"https://registry.npmjs.org/react-primitive-scripts/-/react-primitive-scripts-0.20.0.tgz\"\n *     - a package from `tasks/clean_pack.sh`: \"/home/adam/create-react-primitive-app/react-primitive-scripts-0.22.0.tgz\"\n */\nconst commands = argv._;\nconst cwd = process.cwd();\nconst packageManager = argv['package-manager'];\n\nif (commands.length === 0) {\n    if (argv.version) {\n        const version = require('../package.json').version;\n        console.log(`create-react-primitive-app version: ${version}`);\n        process.exit();\n    }\n    console.error(\n        'Usage: create-react-primitive-app <project-directory> [--verbose]'\n    );\n    process.exit(1);\n}\n\ncreateApp(commands[0], !!argv.verbose, argv['scripts-version']).then(() => {});\n\nfunction userHasYarn() {\n    try {\n        const result = spawn.sync('yarnpkg', ['--version'], {\n            stdio: 'ignore'\n        });\n        if (result.error || result.status !== 0) {\n            return false;\n        }\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// This decides the 'interface' of the package managing command.\n// Ex: If it guesses the type of package manager as 'yarn',\n//     then it executes '(yarn) add' command instead of '(npm) install'.\nfunction packageManagerType() {\n    const defaultType = 'npm';\n    const supportedTypes = ['yarn', 'npm'];\n\n    if (packageManager) {\n        let t = supportedTypes.find(type => {\n            return packageManager.indexOf(type) > -1;\n        });\n        return t ? t : defaultType;\n    }\n\n    return userHasYarn() ? 'yarn' : defaultType;\n}\n\nfunction packageManagerCmd() {\n    if (packageManager) {\n        return packageManager;\n    } else {\n        return packageManagerType() === 'yarn' ? 'yarnpkg' : 'npm';\n    }\n}\n\nasync function createApp(\n    name: string,\n    verbose: boolean,\n    version: ?string\n): Promise<void> {\n    const root = path.resolve(name);\n    const appName = path.basename(root);\n\n    const packageToInstall = getInstallPackage(version);\n    const packageName = getPackageName(packageToInstall);\n    checkAppName(appName, packageName);\n\n    if (!await pathExists(name)) {\n        await fse.mkdir(root);\n    } else if (!await isSafeToCreateProjectIn(root)) {\n        console.log(\n            `The directory \\`${name}\\` contains file(s) that could conflict. Aborting.`\n        );\n        process.exit(1);\n    }\n\n    console.log(`Creating a new React Primitive app in ${root}.`);\n    console.log();\n\n    const packageJson = {\n        name: appName,\n        version: '0.1.0',\n        private: true\n    };\n    await fse.writeFile(\n        path.join(root, 'package.json'),\n        JSON.stringify(packageJson, null, 2)\n    );\n    process.chdir(root);\n\n    console.log(\n        `Using package manager as ${packageManagerCmd()} with ${packageManagerType()} interface.`\n    );\n    console.log('Installing packages. This might take a couple minutes.');\n    console.log('Installing react-primitive-scripts...');\n    console.log();\n\n    await run(root, appName, version, verbose, packageToInstall, packageName);\n}\n\nfunction install(\n    packageToInstall: string,\n    verbose: boolean,\n    callback: (\n        code: number,\n        command: string,\n        args: Array<string>\n    ) => Promise<void>\n): void {\n    const type = packageManagerType();\n    let args, result;\n    let cmd = packageManagerCmd();\n\n    if (type === 'yarn') {\n        args = ['add'];\n\n        if (verbose) {\n            args.push('--verbose');\n        }\n\n        args = args.concat([\n            '--dev',\n            '--exact',\n            '--ignore-optional',\n            packageToInstall\n        ]);\n        result = spawn.sync(cmd, args, { stdio: 'inherit' });\n    } else {\n        args = ['install'];\n\n        if (verbose) {\n            args.push('--verbose');\n        }\n        args = args.concat(['--save-dev', '--save-exact', packageToInstall]);\n\n        result = spawn.sync(cmd, args, { stdio: 'inherit' });\n    }\n\n    callback(result.status, cmd, args).then(\n        () => {},\n        e => {\n            throw e;\n        }\n    );\n}\n\nasync function run(\n    root: string,\n    appName: string,\n    version: ?string,\n    verbose: boolean,\n    packageToInstall: string,\n    packageName: string\n): Promise<void> {\n    install(\n        packageToInstall,\n        verbose,\n        async (code: number, command: string, args: Array<string>) => {\n            if (code !== 0) {\n                console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n                return;\n            }\n\n            await checkNodeVersion(packageName);\n\n            const scriptsPath = path.resolve(\n                process.cwd(),\n                'node_modules',\n                packageName,\n                'build',\n                'scripts',\n                'init.js'\n            );\n\n            // $FlowFixMe (dikaiosune) maybe there's a way to convince flow this is legit?\n            const init = require(scriptsPath);\n            await init(root, appName, verbose, cwd);\n        }\n    );\n}\n\nfunction getInstallPackage(version: ?string): string {\n    let packageToInstall = 'react-primitive-scripts';\n    const validSemver = semver.valid(version);\n    if (validSemver) {\n        packageToInstall += `@${validSemver}`;\n    } else if (version) {\n        // for tar.gz or alternative paths\n        packageToInstall = version;\n    }\n    return packageToInstall;\n}\n\n// Extract package name from tarball url or path.\nfunction getPackageName(installPackage: string): string {\n    if (installPackage.indexOf('.tgz') > -1) {\n        // The package name could be with or without semver version, e.g. react-scripts-0.2.0-alpha.1.tgz\n        // However, this function returns package name only wihout semver version.\n        const matches = installPackage.match(/^.+[\\/\\\\](.+?)(?:-\\d+.+)?\\.tgz$/);\n        if (matches && matches.length >= 2) {\n            return matches[1];\n        } else {\n            throw new Error(\n                `Provided scripts package (${installPackage}) doesn't have a valid filename.`\n            );\n        }\n    } else if (installPackage.indexOf('@') > 0) {\n        // Do not match @scope/ when stripping off @version or @tag\n        return installPackage.charAt(0) +\n            installPackage.substr(1).split('@')[0];\n    }\n    return installPackage;\n}\n\nasync function checkNodeVersion(packageName: string): Promise<void> {\n    const packageJsonPath = path.resolve(\n        process.cwd(),\n        'node_modules',\n        packageName,\n        'package.json'\n    );\n\n    const packageJson = JSON.parse(await fse.readFile(packageJsonPath));\n    if (!packageJson.engines || !packageJson.engines.node) {\n        return;\n    }\n\n    if (!semver.satisfies(process.version, packageJson.engines.node)) {\n        console.error(\n            chalk.red(\n                'You are currently running Node %s but create-react-primitive-app requires %s.' +\n                    ' Please use a supported version of Node.\\n'\n            ),\n            process.version,\n            packageJson.engines.node\n        );\n        process.exit(1);\n    }\n}\n\nfunction checkAppName(appName: string, packageName: string): void {\n    const allDependencies = [\n        'react-primitive-scripts',\n        'exponent',\n        'expo',\n        'vector-icons',\n        'react',\n        'react-native'\n    ];\n\n    if (allDependencies.indexOf(appName) >= 0) {\n        console.error(\n            chalk.red(\n                'We cannot create a project called `' +\n                    appName +\n                    '` because a dependency with the same name exists.\\n' +\n                    'Due to the way npm works, the following names are not allowed:\\n\\n'\n            ) +\n                chalk.cyan(\n                    allDependencies\n                        .map(depName => {\n                            return '  ' + depName;\n                        })\n                        .join('\\n')\n                ) +\n                chalk.red('\\n\\nPlease choose a different project name.')\n        );\n        process.exit(1);\n    }\n}\n\n// If project only contains files generated by GH, it’s safe\nasync function isSafeToCreateProjectIn(root: string): Promise<boolean> {\n    const validFiles = [\n        '.DS_Store',\n        'Thumbs.db',\n        '.git',\n        '.gitignore',\n        'README.md',\n        'LICENSE'\n    ];\n    return (await fse.readdir(root)).every(file => {\n        return validFiles.indexOf(file) >= 0;\n    });\n}\n"]}